import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
#extraction of data
uber = pd.read_csv(r"C:\Users\prosper\Downloads\uber-raw-data-apr14.csv")
#Check data types of each column
print(uber.info())
#describtion of data
statistics = uber.describe()
#prints the top 5 in the data frame
print(uber.head())

def missing_num(x):
    return sum(x.isnull())
print('Number of missing/null values per column')
print(uber.apply(missing_num, axis=0))

uber['Date/Time']  = pd.to_datetime(uber['Date/Time'])
uber['DayofweekNum'] = uber['Date/Time'].dt.dayofweek
uber['DayOfweek']= uber['Date/Time'].dt.day_name
uber['DayNum'] = uber['Date/Time'].dt.day
uber['HourOfDay'] = uber['Date/Time'].dt.hour

print(uber)
print(uber.columns)
print(uber.shape)
print(uber['Base'].unique())

sns.catplot(x= 'Base', data= uber, kind ='count')
plt.show()

uber_week_data = uber.pivot_table(index= ['DayofweekNum','DayOfweek'], values='Base', aggfunc='count')
uber_week_dat = uber.groupby(['DayofweekNum','DayOfweek'])['Base'].count()
print(uber_week_data)
print('///////')

uber_week_data.plot(kind ='bar')
plt.show()

uber_hourly_data = uber.pivot_table(index=['HourOfDay'], values='Base', aggfunc = 'count')
#uber_hourly_data.plot(kind ='line',figsize= (10,6), title= 'Hourly Journeys')
#plt.show()


uber_day_data = uber.pivot_table(index= ['DayNum'], values = 'Base', aggfunc= 'count')
uber_day_data.plot(kind='bar',figsize= (10,5),title = 'Journeys by DayNum')
plt.show()

def count_rows(rows):
    return len(rows)
by_date = uber.groupby('DayNum').apply(count_rows)
print(by_date)

#hours were most rides where booked
sns.histplot(data=uber,x= uber.HourOfDay,bins=24)
plt.show()

#days with the highest bookings
by_date.plot(kind='bar')
plt.show()

count_rows(uber)
by_hour_weekday =uber.groupby('HourOfDay DayofweekNum'.split()).apply(count_rows).unstack()
print(by_hour_weekday)

#Heat map the brightest spot shows the day/hour with the highest frequency
plt.figure(figsize=(15,10))
sns.heatmap(by_hour_weekday)
plt.show()

